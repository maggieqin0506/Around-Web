{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maggie/Documents/Projects/Around-Web/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Form, Input, Button, message } from 'antd';\nimport axios from 'axios';\nimport { BASE_URL } from \"../constants\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 16,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nfunction Register(props) {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n    const {\n      username,\n      password\n    } = values;\n    const opt = {\n      method: 'POST',\n      url: `${BASE_URL}/signup`,\n      data: {\n        username: username,\n        password: password\n      },\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n    axios(opt).then(response => {\n      console.log(response); // case1: registered success\n\n      if (response.status === 200) {\n        message.success('Registration succeed!');\n        props.history.push('/login');\n      }\n    }).catch(error => {\n      console.log('register failed: ', error.message);\n      message.success('Registration failed!'); // throw new Error('Signup Failed!')\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n    form: form,\n    name: \"register\",\n    onFinish: onFinish,\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"username\",\n      label: \"Username\",\n      rules: [{\n        required: true,\n        message: 'Please input your Username!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      hasFeedback: true,\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('The two passwords that you entered do not match!');\n        }\n\n      })],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"register-btn\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/maggie/Documents/Projects/Around-Web/src/components/Register.js"],"names":["React","Form","Input","Button","message","axios","BASE_URL","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Register","props","form","useForm","onFinish","values","console","log","username","password","opt","method","url","data","headers","then","response","status","success","history","push","catch","error","required","getFieldValue","validator","rule","value","Promise","resolve","reject"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,OAA9B,QAA6C,MAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,cAAzB;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADE;AAENC,IAAAA,EAAE,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAFE,GADS;AAKnBE,EAAAA,UAAU,EAAE;AACRH,IAAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADI;AAERC,IAAAA,EAAE,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAFI;AALO,CAAvB;AAUA,MAAMG,kBAAkB,GAAG;AACvBD,EAAAA,UAAU,EAAE;AACRH,IAAAA,EAAE,EAAE;AACAC,MAAAA,IAAI,EAAE,EADN;AAEAI,MAAAA,MAAM,EAAE;AAFR,KADI;AAKRH,IAAAA,EAAE,EAAE;AACAD,MAAAA,IAAI,EAAE,EADN;AAEAI,MAAAA,MAAM,EAAE;AAFR;AALI;AADW,CAA3B;;AAaA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,IAAD,IAAShB,IAAI,CAACiB,OAAL,EAAf;;AAEA,QAAMC,QAAQ,GAAGC,MAAM,IAAI;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;AACA,UAAM;AAAEG,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBJ,MAA/B;AACA,UAAMK,GAAG,GAAG;AACRC,MAAAA,MAAM,EAAE,MADA;AAERC,MAAAA,GAAG,EAAG,GAAErB,QAAS,SAFT;AAGRsB,MAAAA,IAAI,EAAE;AACFL,QAAAA,QAAQ,EAAEA,QADR;AAEFC,QAAAA,QAAQ,EAAEA;AAFR,OAHE;AAORK,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAPD,KAAZ;AAUAxB,IAAAA,KAAK,CAACoB,GAAD,CAAL,CACKK,IADL,CACWC,QAAQ,IAAI;AACfV,MAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ,EADe,CAEf;;AACA,UAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA4B;AACxB5B,QAAAA,OAAO,CAAC6B,OAAR,CAAgB,uBAAhB;AACAjB,QAAAA,KAAK,CAACkB,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACH;AACJ,KARL,EASKC,KATL,CASYC,KAAK,IAAI;AACbhB,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCe,KAAK,CAACjC,OAAvC;AACAA,MAAAA,OAAO,CAAC6B,OAAR,CAAgB,sBAAhB,EAFa,CAGb;AACH,KAbL;AAcH,GA3BD;;AA6BA,sBACI,QAAC,IAAD,OACQ1B,cADR;AAEI,IAAA,IAAI,EAAEU,IAFV;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,QAAQ,EAAEE,QAJd;AAKI,IAAA,SAAS,EAAC,UALd;AAAA,4BAOI,QAAC,IAAD,CAAM,IAAN;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,KAAK,EAAC,UAFV;AAGI,MAAA,KAAK,EAAE,CACH;AACImB,QAAAA,QAAQ,EAAE,IADd;AAEIlC,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AAAA,6BAUI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAoBI,QAAC,IAAD,CAAM,IAAN;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,KAAK,EAAC,UAFV;AAGI,MAAA,KAAK,EAAE,CACH;AACIkC,QAAAA,QAAQ,EAAE,IADd;AAEIlC,QAAAA,OAAO,EAAE;AAFb,OADG,CAHX;AASI,MAAA,WAAW,MATf;AAAA,6BAWI,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,YApBJ,eAkCI,QAAC,IAAD,CAAM,IAAN;AACI,MAAA,IAAI,EAAC,SADT;AAEI,MAAA,KAAK,EAAC,kBAFV;AAGI,MAAA,YAAY,EAAE,CAAC,UAAD,CAHlB;AAII,MAAA,WAAW,MAJf;AAKI,MAAA,KAAK,EAAE,CACH;AACIkC,QAAAA,QAAQ,EAAE,IADd;AAEIlC,QAAAA,OAAO,EAAE;AAFb,OADG,EAKH,CAAC;AAAEmC,QAAAA;AAAF,OAAD,MAAwB;AACpBC,QAAAA,SAAS,CAACC,IAAD,EAAOC,KAAP,EAAc;AACnB,cAAI,CAACA,KAAD,IAAUH,aAAa,CAAC,UAAD,CAAb,KAA8BG,KAA5C,EAAmD;AAC/C,mBAAOC,OAAO,CAACC,OAAR,EAAP;AACH;;AACD,iBAAOD,OAAO,CAACE,MAAR,CAAe,kDAAf,CAAP;AACH;;AANmB,OAAxB,CALG,CALX;AAAA,6BAoBI,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AApBJ;AAAA;AAAA;AAAA;AAAA,YAlCJ,eAyDI,QAAC,IAAD,CAAM,IAAN,OAAehC,kBAAf;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAyC,QAAA,SAAS,EAAC,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAzDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiEH;;GAjGQE,Q;UACUd,IAAI,CAACiB,O;;;KADfH,Q;AAmGT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { Form, Input, Button, message } from 'antd';\nimport axios from 'axios';\n\nimport { BASE_URL } from \"../constants\";\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 16,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nfunction Register(props) {\n    const [form] = Form.useForm();\n\n    const onFinish = values => {\n        console.log('Received values of form: ', values);\n        const { username, password } = values;\n        const opt = {\n            method: 'POST',\n            url: `${BASE_URL}/signup`,\n            data: {\n                username: username,\n                password: password\n            },\n            headers: { 'content-type': 'application/json'}\n        };\n\n        axios(opt)\n            .then( response => {\n                console.log(response)\n                // case1: registered success\n                if(response.status === 200) {\n                    message.success('Registration succeed!');\n                    props.history.push('/login');\n                }\n            })\n            .catch( error => {\n                console.log('register failed: ', error.message);\n                message.success('Registration failed!');\n                // throw new Error('Signup Failed!')\n            })\n    };\n\n    return (\n        <Form\n            {...formItemLayout}\n            form={form}\n            name=\"register\"\n            onFinish={onFinish}\n            className=\"register\"\n        >\n            <Form.Item\n                name=\"username\"\n                label=\"Username\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your Username!',\n                    },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                name=\"password\"\n                label=\"Password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your password!',\n                    },\n                ]}\n                hasFeedback\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item\n                name=\"confirm\"\n                label=\"Confirm Password\"\n                dependencies={['password']}\n                hasFeedback\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please confirm your password!',\n                    },\n                    ({ getFieldValue }) => ({\n                        validator(rule, value) {\n                            if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve();\n                            }\n                            return Promise.reject('The two passwords that you entered do not match!');\n                        },\n                    }),\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"register-btn\">\n                    Register\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}