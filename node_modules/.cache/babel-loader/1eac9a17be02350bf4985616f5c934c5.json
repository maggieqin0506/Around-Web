{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/maggie/Documents/Projects/Around-Web/src/components/CreatePostButton.js\";\nimport React, { Component, createRef } from \"react\";\nimport { Modal, Button, message } from \"antd\";\nimport axios from \"axios\";\nimport { PostForm } from \"./PostForm\";\nimport { BASE_URL, TOKEN_KEY } from \"../constants\";\n\nclass CreatePostButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false,\n      confirmLoading: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        confirmLoading: true\n      }); // get form data\n\n      this.postForm.validateFields().then(form => {\n        const {\n          description,\n          uploadPost\n        } = form;\n        const {\n          type,\n          originFileObj\n        } = uploadPost[0];\n        const postType = type.match(/^(image|video)/g)[0];\n\n        if (postType) {\n          let formData = new FormData();\n          formData.append(\"message\", description);\n          formData.append(\"media_file\", originFileObj);\n          const opt = {\n            method: \"POST\",\n            url: `${BASE_URL}/upload`,\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(TOKEN_KEY)}`\n            },\n            data: formData\n          };\n          axios(opt).then(res => {\n            if (res.status === 200) {\n              message.success(\"The image/video is uploaded!\");\n              this.postForm.resetFields();\n              this.handleCancel();\n              this.props.onShowPost(postType);\n              this.setState({\n                confirmLoading: false\n              });\n            }\n          }).catch(err => {\n            console.log(\"Upload image/video failed: \", err.message);\n            message.error(\"Failed to upload image/video!\");\n            this.setState({\n              confirmLoading: false\n            });\n          });\n        }\n      }).catch(err => {\n        console.log(\"err ir validate form -> \", err);\n      });\n    };\n\n    this.handleCancel = () => {\n      console.log(\"Clicked cancel button\");\n      this.setState({\n        visible: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      visible,\n      confirmLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.showModal,\n        children: \"Create New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Create New Post\",\n        visible: visible,\n        onOk: this.handleOk,\n        okText: \"Create\",\n        confirmLoading: confirmLoading,\n        onCancel: this.handleCancel,\n        children: /*#__PURE__*/_jsxDEV(PostForm, {\n          ref: refInstance => this.postForm = refInstance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CreatePostButton;","map":{"version":3,"sources":["/Users/maggie/Documents/Projects/Around-Web/src/components/CreatePostButton.js"],"names":["React","Component","createRef","Modal","Button","message","axios","PostForm","BASE_URL","TOKEN_KEY","CreatePostButton","state","visible","confirmLoading","showModal","setState","handleOk","postForm","validateFields","then","form","description","uploadPost","type","originFileObj","postType","match","formData","FormData","append","opt","method","url","headers","Authorization","localStorage","getItem","data","res","status","success","resetFields","handleCancel","props","onShowPost","catch","err","console","log","error","render","refInstance"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport { Modal, Button, message } from \"antd\";\nimport axios from \"axios\";\n\nimport { PostForm } from \"./PostForm\";\nimport { BASE_URL, TOKEN_KEY } from \"../constants\";\n\nclass CreatePostButton extends Component {\n    state = {\n        visible: false,\n        confirmLoading: false\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true\n        });\n    };\n\n    handleOk = () => {\n        this.setState({\n            confirmLoading: true\n        });\n\n        // get form data\n        this.postForm\n            .validateFields()\n            .then((form) => {\n                const { description, uploadPost } = form;\n                const { type, originFileObj } = uploadPost[0];\n                const postType = type.match(/^(image|video)/g)[0];\n                if (postType) {\n                    let formData = new FormData();\n                    formData.append(\"message\", description);\n                    formData.append(\"media_file\", originFileObj);\n\n                    const opt = {\n                        method: \"POST\",\n                        url: `${BASE_URL}/upload`,\n                        headers: {\n                            Authorization: `Bearer ${localStorage.getItem(TOKEN_KEY)}`\n                        },\n                        data: formData\n                    };\n\n                    axios(opt)\n                        .then((res) => {\n                            if (res.status === 200) {\n                                message.success(\"The image/video is uploaded!\");\n                                this.postForm.resetFields();\n                                this.handleCancel();\n                                this.props.onShowPost(postType);\n                                this.setState({ confirmLoading: false });\n                            }\n                        })\n                        .catch((err) => {\n                            console.log(\"Upload image/video failed: \", err.message);\n                            message.error(\"Failed to upload image/video!\");\n                            this.setState({ confirmLoading: false });\n                        });\n                }\n            })\n            .catch((err) => {\n                console.log(\"err ir validate form -> \", err);\n            });\n    };\n\n    handleCancel = () => {\n        console.log(\"Clicked cancel button\");\n        this.setState({\n            visible: false\n        });\n    };\n\n    render() {\n        const { visible, confirmLoading } = this.state;\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.showModal}>\n                    Create New Post\n                </Button>\n                <Modal\n                    title=\"Create New Post\"\n                    visible={visible}\n                    onOk={this.handleOk}\n                    okText=\"Create\"\n                    confirmLoading={confirmLoading}\n                    onCancel={this.handleCancel}\n                >\n                    <PostForm ref={(refInstance) => (this.postForm = refInstance)} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default CreatePostButton;"]},"metadata":{},"sourceType":"module"}